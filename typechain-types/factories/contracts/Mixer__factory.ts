/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Mixer, MixerInterface } from "../../contracts/Mixer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "noteIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "secretValueHash",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secretValueHash",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNotesRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "nullifier",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060006005819055506040516022906082565b604051809103906000f080158015603d573d6000803e3d6000fd5b50600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608f565b61065b80610b2083390190565b610a828061009e6000396000f3fe6080604052600436106100345760003560e01c80630343166c14610039578063aebad2e714610062578063b6b55f251461008d575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906104ce565b6100a9565b005b34801561006e57600080fd5b50610077610219565b6040516100849190610546565b60405180910390f35b6100a760048036038101906100a29190610561565b610299565b005b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5c9d69e86868660405180604001604052806100ff610219565b8152602001888152506040518563ffffffff1660e01b81526004016101279493929190610711565b602060405180830381865afa158015610144573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101689190610790565b9050806101a1576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166706f05b59d3b200006040516101cd906107ee565b60006040518083038185875af1925050503d806000811461020a576040519150601f19603f3d011682016040523d82523d6000602084013e61020f565b606091505b5050505050505050565b600073__$a5a2913360da49dd4fe7859d90339656a4$__63f47cbc3a60006040518263ffffffff1660e01b8152600401610253919061080a565b602060405180830381865af4158015610270573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610294919061083a565b905090565b6706f05b59d3b2000034146102e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102da906108c4565b60405180910390fd5b600073__$75f79a42d9bcbdbb69ad79ebd80f556f39$__63561558fe60405180604001604052806005548152602001858152506040518263ffffffff1660e01b8152600401610332919061096d565b602060405180830381865af415801561034f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610373919061083a565b905073__$a5a2913360da49dd4fe7859d90339656a4$__632f8549716000836040518363ffffffff1660e01b81526004016103af929190610997565b602060405180830381865af41580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f0919061083a565b507fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c55600554836040516104249291906109c0565b60405180910390a160016005600082825461043f9190610a18565b925050819055505050565b600080fd5b600080fd5b6000819050826020600202820111156104705761046f61044f565b5b92915050565b6000819050826040600202820111156104925761049161044f565b5b92915050565b6000819050919050565b6104ab81610498565b81146104b657600080fd5b50565b6000813590506104c8816104a2565b92915050565b60008060008061012085870312156104e9576104e861044a565b5b60006104f787828801610454565b945050604061050887828801610476565b93505060c061051987828801610454565b92505061010061052b878288016104b9565b91505092959194509250565b61054081610498565b82525050565b600060208201905061055b6000830184610537565b92915050565b6000602082840312156105775761057661044a565b5b6000610585848285016104b9565b91505092915050565b82818337505050565b6105a36040838361058e565b5050565b600060029050919050565b600081905092915050565b6000819050919050565b6105d36040838361058e565b5050565b60006105e383836105c7565b60408301905092915050565b600082905092915050565b6000604082019050919050565b610610816105a7565b61061a81846105b2565b9250610625826105bd565b8060005b8381101561065e5761063b82846105ef565b61064587826105d7565b9650610650836105fa565b925050600181019050610629565b505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b61068f81610498565b82525050565b60006106a18383610686565b60208301905092915050565b6000602082019050919050565b6106c381610666565b6106cd8184610671565b92506106d88261067c565b8060005b838110156107095781516106f08782610695565b96506106fb836106ad565b9250506001810190506106dc565b505050505050565b6000610140820190506107276000830187610597565b6107346040830186610607565b61074160c0830185610597565b61074f6101008301846106ba565b95945050505050565b60008115159050919050565b61076d81610758565b811461077857600080fd5b50565b60008151905061078a81610764565b92915050565b6000602082840312156107a6576107a561044a565b5b60006107b48482850161077b565b91505092915050565b600081905092915050565b50565b60006107d86000836107bd565b91506107e3826107c8565b600082019050919050565b60006107f9826107cb565b9150819050919050565b8082525050565b600060208201905061081f6000830184610803565b92915050565b600081519050610834816104a2565b92915050565b6000602082840312156108505761084f61044a565b5b600061085e84828501610825565b91505092915050565b600082825260208201905092915050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b60006108ae600e83610867565b91506108b982610878565b602082019050919050565b600060208201905081810360008301526108dd816108a1565b9050919050565b600081905092915050565b6108f881610498565b82525050565b600061090a83836108ef565b60208301905092915050565b61091f81610666565b61092981846108e4565b92506109348261067c565b8060005b8381101561096557815161094c87826108fe565b9650610957836106ad565b925050600181019050610938565b505050505050565b60006040820190506109826000830184610916565b92915050565b61099181610498565b82525050565b60006040820190506109ac6000830185610803565b6109b96020830184610988565b9392505050565b60006040820190506109d56000830185610537565b6109e26020830184610537565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a2382610498565b9150610a2e83610498565b9250828201905080821115610a4657610a456109e9565b5b9291505056fea2646970667358221220c2fe2d356342d7e1c48035cdd0a06e466314f0650a60a148ebd02b56981ae44e64736f6c634300081c00336080604052348015600f57600080fd5b5061063c8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61004a60048036038101906100459190610567565b610060565b60405161005791906105eb565b60405180910390f35b60006104dd565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110610098576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100ce576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa9150816100fe576000805260206000f35b505050505050565b600060808601600087017f2161df245d35882a79b5663b201e01788fe7cb713a93b8d9efa969e9fa0be28881527f2eda01cd2d2d027c771ef4c2dfbdd58a8577cb5909add4e2999d2edcb28c662960208201526101a960008801357f1074c2e86726e3d0ade2d2eca4a901b0b88f006b07baee246e3318ada2eab3527f2016f15d814561556bd0f1bf052cad61583e5e3ad75ea2891b3f23bb524dac4a8461009b565b6101f960208801357f08e2eb736627e6e2cfb6d76ae06ae533ee60964663d1c4e9c57f55c5af4962707f06db601aa7ab05ced7a252bd37288ac8c7a0d30d9d7f56f939cfa857650b825b8461009b565b833582527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208501357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020830152843560408301526020850135606083015260408501356080830152606085013560a08301527f141edc2469ff47d4b3a3d46bda53726b47c7e3d026cd4cf12ef062fa43fb798960c08301527f04e8304b9358fae75c8c9766444c71f810f1bf9fdd17dad06b3cc46c4f3a4c8260e08301527f062431605cb27da4096912217a3aed9d86afd80bd4d80e58309af6eec7a6ab1f6101008301527f0496a76829a9f138d65642b0194a5d3943e4d4650fb79eec578039a16b49d0cb6101208301527f16ae1c3a6b52a3747572b50af043a0cfe42441c4476bff80895373913cd220ad6101408301527f02e9fbbd3e486bde62feea6e2239dc8de671ac8705eaf9e69deeb17ffbc42d03610160830152600088015161018083015260206000018801516101a08301527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08301527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08301527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008301527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220830152853561024083015260208601356102608301527f142d509ed2d8a2971ac0891b2797d5d5e9b6ce45f6852417011ca82cd53d85036102808301527f0bb16dec8c33fa096ae35c6cefea7bd45cb20fd6b9f28997a2abea1a17e9ecd46102a08301527f0f3cf88d8e6c4ba2e8a79b3a678d08a2efdb5be1d4be565d881fe244542be50e6102c08301527f014e9fc232fa98b5a14baea077102a9a3e5653d9e39ccadf3dc3c2c412bdcc596102e08301526020826103008460086107d05a03fa82518116935050505095945050505050565b60405161038081016040526104f56000840135610067565b6105026020840135610067565b61050f818486888a610106565b8060005260206000f35b600080fd5b600080fd5b60008190508260206002028201111561053f5761053e61051e565b5b92915050565b6000819050826040600202820111156105615761056061051e565b5b92915050565b600080600080610140858703121561058257610581610519565b5b600061059087828801610523565b94505060406105a187828801610545565b93505060c06105b287828801610523565b9250506101006105c487828801610523565b91505092959194509250565b60008115159050919050565b6105e5816105d0565b82525050565b600060208201905061060060008301846105dc565b9291505056fea264697066735822122050a8a7421ff5c68762e0ebf9b8de98e717f1fe8864efb2adca3601062c465bac64736f6c634300081c0033";

type MixerConstructorParams =
  | [linkLibraryAddresses: MixerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MixerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Mixer__factory extends ContractFactory {
  constructor(...args: MixerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Mixer__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: MixerLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a5a2913360da49dd4fe7859d90339656a4\\$__", "g"),
      linkLibraryAddresses["contracts/LeanIMT.sol:LeanIMT"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$75f79a42d9bcbdbb69ad79ebd80f556f39\\$__", "g"),
      linkLibraryAddresses["poseidon-solidity/PoseidonT3.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Mixer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Mixer__factory {
    return super.connect(runner) as Mixer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MixerInterface {
    return new Interface(_abi) as MixerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Mixer {
    return new Contract(address, _abi, runner) as unknown as Mixer;
  }
}

export interface MixerLibraryAddresses {
  ["contracts/LeanIMT.sol:LeanIMT"]: string;
  ["poseidon-solidity/PoseidonT3.sol:PoseidonT3"]: string;
}
